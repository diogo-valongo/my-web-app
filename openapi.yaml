openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: 'http://localhost:8080'
    description: Generated server url
paths:
  '/usuarios/{usuarioId}/organizadores':
    put:
      tags:
        - usuario-controller
      operationId: makeOrganizador
      parameters:
        - name: usuarioId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: adminId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/usuarios/{id}':
    get:
      tags:
        - usuario-controller
      operationId: getUsuarioById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
    put:
      tags:
        - usuario-controller
      operationId: updateUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
    delete:
      tags:
        - usuario-controller
      operationId: deleteUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/eventos/{id}':
    get:
      tags:
        - evento-controller
      operationId: getEventoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Evento'
    put:
      tags:
        - evento-controller
      operationId: updateEvento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Evento'
    delete:
      tags:
        - evento-controller
      operationId: deleteEvento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/espacos/{id}':
    get:
      tags:
        - espaco-controller
      operationId: getEspacoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Espaco'
    put:
      tags:
        - espaco-controller
      operationId: updateEspaco
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Espaco'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Espaco'
    delete:
      tags:
        - espaco-controller
      operationId: deleteEspaco
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/edicoes/{id}':
    get:
      tags:
        - edicao-controller
      operationId: getEdicaoById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Edicao'
    put:
      tags:
        - edicao-controller
      operationId: updateEdicao
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edicao'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Edicao'
    delete:
      tags:
        - edicao-controller
      operationId: deleteEdicao
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  '/atividades/{id}':
    get:
      tags:
        - atividade-controller
      operationId: getAtividadeById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Atividade'
    put:
      tags:
        - atividade-controller
      operationId: updateAtividade
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atividade'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Atividade'
    delete:
      tags:
        - atividade-controller
      operationId: deleteAtividade
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /usuarios:
    get:
      tags:
        - usuario-controller
      operationId: getAllUsuarios
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - usuario-controller
      operationId: createUsuario
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Usuario'
  '/usuarios/{id}/atividades':
    get:
      tags:
        - usuario-controller
      operationId: getAtividadesByUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atividade'
    '/usuarios/{id}/atividades/{atividadeId}':
    post:
      tags:
        - usuario-controller
      operationId: addAtividadeToUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: atividadeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
    delete:
      tags:
        - usuario-controller
      operationId: DeleteAtividadeToUsuario
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: atividadeId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /eventos:
    get:
      tags:
        - evento-controller
      operationId: getAllEventos
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
    post:
      tags:
        - evento-controller
      operationId: createEvento
      parameters:
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Evento'
  /espacos:
    get:
      tags:
        - espaco-controller
      operationId: getAllEspacos
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Espaco'
    post:
      tags:
        - espaco-controller
      operationId: createEspaco
      parameters:
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Espaco'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Espaco'
  /edicoes:
    get:
      tags:
        - edicao-controller
      operationId: getAllEdicoes
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Edicao'
    post:
      tags:
        - edicao-controller
      operationId: createEdicao
      parameters:
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: eventoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edicao'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Edicao'
  '/edicoes/{id}/usuarios':
    get:
      tags:
        - edicao-controller
      operationId: getUsuariosByEdicao
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      tags:
        - edicao-controller
      operationId: addUsuarioToEdicao
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
    delete:
      tags:
        - edicao-controller
      operationId: deleteUsuarioToEdicao
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
  /atividades:
    get:
      tags:
        - atividade-controller
      operationId: getAllAtividades
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atividade'
    post:
      tags:
        - atividade-controller
      operationId: createAtividade
      parameters:
        - name: usuarioId
          in: query
          required: true
          schema:
            type: integer
            format: int32
        - name: edicaoId
          in: query
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atividade'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Atividade'
  '/atividades/{atividadeId}/espaco/{espacoId}':
    post:
      tags:
        - atividade-controller
      operationId: associateEspaco
      parameters:
        - name: atividadeId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: espacoId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
components:
  schemas:
    Atividade:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
        tipoEnum:
          type: string
          enum:
            - PALESTRA
            - PAINEL
            - SESSAO_TECNICA
        descricao:
          type: string
        data:
          type: string
          format: date-time
        horarioInicio:
          type: string
          format: date-time
        horarioFinal:
          type: string
          format: date-time
        edicao:
          $ref: '#/components/schemas/Edicao'
        local:
          $ref: '#/components/schemas/Espaco'
        usuarios:
          type: array
          items:
            $ref: '#/components/schemas/Usuario'
    Edicao:
      type: object
      properties:
        id:
          type: integer
          format: int32
        numero:
          type: integer
          format: int32
        ano:
          type: integer
          format: int32
        cidade:
          type: string
        info_Inscricao:
          type: string
        precosPorLote:
          type: string
        link_Inscricao:
          type: string
        dataInicial:
          type: string
          format: date-time
        dataFinal:
          type: string
          format: date-time
        dataSubmissao:
          type: string
          format: date-time
        dataDivulgacao:
          type: string
          format: date-time
        dataEntregaFinal:
          type: string
          format: date-time
        chamadaTrabalhos:
          type: string
        organizadores:
          type: array
          items:
            $ref: '#/components/schemas/Usuario'
        evento:
          $ref: '#/components/schemas/Evento'
        atividades:
          type: array
          items:
            $ref: '#/components/schemas/Atividade'
        usuarios:
          type: array
          items:
            $ref: '#/components/schemas/Usuario'
    Espaco:
      type: object
      properties:
        id:
          type: integer
          format: int32
        nome:
          type: string
        localizacao:
          type: string
        capacidade:
          type: integer
          format: int32
        recursos:
          type: array
          items:
            type: string
        atividades:
          type: array
          items:
            $ref: '#/components/schemas/Atividade'
    Evento:
      type: object
      properties:
        nome:
          type: string
        descricao:
          type: string
        sigla:
          type: string
        caminho:
          type: string
        edicoes:
          type: array
          items:
            $ref: '#/components/schemas/Edicao'
    Usuario:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        nome:
          type: string
        email:
          type: string
        afiliacao:
          type: string
        tipoUsuario:
          type: string
          enum:
            - ADMIN
            - NORMAL
        edicoes:
          type: array
          items:
            $ref: '#/components/schemas/Edicao'
        organizacoes:
          type: array
          items:
            $ref: '#/components/schemas/Edicao'
        atividadesFavoritas:
          type: array
          items:
            $ref: '#/components/schemas/Atividade'
