openapi: 3.0.3
info:
  title: API de Gerenciamento de Eventos
  description: API para gerenciamento de eventos, edições, organizadores, espaços, atividades e usuários
  version: 1.0.0
  license:
    name: Apache 2.0
    url: http://springdoc.org
servers:
  - url: http://localhost:8080
    description: Servidor local

paths:
  /eventos:
    get:
      summary: Lista todos os eventos
      tags:
        - Eventos
      responses:
        '200':
          description: Lista de eventos retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Evento'
    post:
      summary: Cria um novo evento
      tags:
        - Eventos
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '201':
          description: Evento criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'

  /eventos/{id}/users:
     get:
      summary: Lista todos os usuários referentes a um evento
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do evento
      responses:
        '200':
          description: Lista de usuários retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'

  /eventos/{id}:
    get:
      summary: Obtém um evento específico pelo ID
      tags:
        - Eventos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do evento
      responses:
        '200':
          description: Evento retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'
        '404':
          description: Evento não encontrado
    put:
      summary: Atualiza um evento existente pelo ID
      tags:
        - Eventos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do evento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Evento'
      responses:
        '200':
          description: Evento atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Evento'
        '404':
          description: Evento não encontrado
    delete:
      summary: Deleta um evento pelo ID
      tags:
        - Eventos
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do evento
      responses:
        '204':
          description: Evento deletado com sucesso
        '404':
          description: Evento não encontrado

  /edicoes:
    get:
      summary: Lista todas as edições
      tags:
        - Edições
      responses:
        '200':
          description: Lista de edições retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Edicao'
    post:
      summary: Cria uma nova edição
      tags:
        - Edições
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edicao'
      responses:
        '201':
          description: Edição criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edicao'

  /edicoes/{id}:
    get:
      summary: Obtém uma edição específica pelo ID
      tags:
        - Edições
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da edição
      responses:
        '200':
          description: Edição retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edicao'
        '404':
          description: Edição não encontrada
    put:
      summary: Atualiza uma edição existente pelo ID
      tags:
        - Edições
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da edição
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Edicao'
      responses:
        '200':
          description: Edição atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Edicao'
        '404':
          description: Edição não encontrada
    delete:
      summary: Deleta uma edição pelo ID
      tags:
        - Edições
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da edição
      responses:
        '204':
          description: Edição deletada com sucesso
        '404':
          description: Edição não encontrada

  /organizadores:
    get:
      summary: Lista todos os organizadores
      tags:
        - Organizadores
      responses:
        '200':
          description: Lista de organizadores retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organizador'
    post:
      summary: Cria um novo organizador
      tags:
        - Organizadores
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organizador'
      responses:
        '201':
          description: Organizador criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizador'

  /organizadores/{id}:
    get:
      summary: Obtém um organizador específico pelo ID
      tags:
        - Organizadores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do organizador
      responses:
        '200':
          description: Organizador retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizador'
        '404':
          description: Organizador não encontrado
    put:
      summary: Atualiza um organizador existente pelo ID
      tags:
        - Organizadores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do organizador
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organizador'
      responses:
        '200':
          description: Organizador atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organizador'
        '404':
          description: Organizador não encontrado
    delete:
      summary: Deleta um organizador pelo ID
      tags:
        - Organizadores
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do organizador
      responses:
        '204':
          description: Organizador deletado com sucesso
        '404':
          description: Organizador não encontrado

  /espacos:
    get:
      summary: Lista todos os espaços
      tags:
        - Espaços
      responses:
        '200':
          description: Lista de espaços retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Espaco'
    post:
      summary: Cria um novo espaço
      tags:
        - Espaços
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Espaco'
      responses:
        '201':
          description: Espaço criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Espaco'

  /espacos/{id}:
    get:
      summary: Obtém um espaço específico pelo ID
      tags:
        - Espaços
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do espaço
      responses:
        '200':
          description: Espaço retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Espaco'
        '404':
          description: Espaço não encontrado
    put:
      summary: Atualiza um espaço existente pelo ID
      tags:
        - Espaços
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do espaço
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Espaco'
      responses:
        '200':
          description: Espaço atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Espaco'
        '404':
          description: Espaço não encontrado
    delete:
      summary: Deleta um espaço pelo ID
      tags:
        - Espaços
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do espaço
      responses:
        '204':
          description: Espaço deletado com sucesso
        '404':
          description: Espaço não encontrado

  /atividades:
    get:
      summary: Lista todas as atividades
      tags:
        - Atividades
      responses:
        '200':
          description: Lista de atividades retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Atividade'
    post:
      summary: Cria uma nova atividade
      tags:
        - Atividades
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atividade'
      responses:
        '201':
          description: Atividade criada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atividade'

  /atividades/{id}:
    get:
      summary: Obtém uma atividade específica pelo ID
      tags:
        - Atividades
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da atividade
      responses:
        '200':
          description: Atividade retornada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atividade'
        '404':
          description: Atividade não encontrada
    put:
      summary: Atualiza uma atividade existente pelo ID
      tags:
        - Atividades
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da atividade
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Atividade'
      responses:
        '200':
          description: Atividade atualizada com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Atividade'
        '404':
          description: Atividade não encontrada
    delete:
      summary: Deleta uma atividade pelo ID
      tags:
        - Atividades
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID da atividade
      responses:
        '204':
          description: Atividade deletada com sucesso
        '404':
          description: Atividade não encontrada

  /usuarios:
    get:
      summary: Lista todos os usuários
      tags:
        - Usuários
      responses:
        '200':
          description: Lista de usuários retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Usuario'
    post:
      summary: Cria um novo usuário
      tags:
        - Usuários
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '201':
          description: Usuário criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'

  /usuarios/{id}:
    get:
      summary: Obtém um usuário específico pelo ID
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do usuário
      responses:
        '200':
          description: Usuário retornado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
    put:
      summary: Atualiza um usuário existente pelo ID
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do usuário
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Usuario'
      responses:
        '200':
          description: Usuário atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        '404':
          description: Usuário não encontrado
    delete:
      summary: Deleta um usuário pelo ID
      tags:
        - Usuários
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
          description: ID do usuário
      responses:
        '204':
          description: Usuário deletado com sucesso
        '404':
          description: Usuário não encontrado

components:
  schemas:
    Evento:
      type: object
      properties:
        id:
          type: integer
          description: ID do evento
          example: 1
        nome:
          type: string
          description: Nome do evento
          example: "Nome do Evento"
        descricao:
          type: string
          description: Descrição do evento
          example: "Descrição detalhada do evento"
        sigla:
          type: string
          description: Sigla do evento
          example: "NEV"
        caminho:
          type: string
          description: Caminho do evento
          example: "/caminho-do-evento"
      required:
        - nome
        - descricao
        - sigla
        - caminho

    Edicao:
      type: object
      properties:
        id:
          type: integer
          description: ID da edição
          example: 1
        ano:
          type: integer
          description: Ano da edição
          example: 2023
        eventoId:
          type: integer
          description: ID do evento associado
          example: 1
      required:
        - ano
        - eventoId

    Organizador:
      type: object
      properties:
        id:
          type: integer
          description: ID do organizador
          example: 1
        nome:
          type: string
          description: Nome do organizador
          example: "Nome do Organizador"
      required:
        - nome

    Espaco:
      type: object
      properties:
        id:
          type: integer
          description: ID do espaço
          example: 1
        nome:
          type: string
          description: Nome do espaço
          example: "Auditório Principal"
        capacidade:
          type: integer
          description: Capacidade do espaço
          example: 100
      required:
        - nome
        - capacidade

    Atividade:
      type: object
      properties:
        id:
          type: integer
          description: ID da atividade
          example: 1
        nome:
          type: string
          description: Nome da atividade
          example: "Palestra de Abertura"
        tipoEnum:
          type: string
          enum:
            - Atividade 1
            - Atividade 2
            - Atividade 3
          description: Tipo de atividade (Enum)
          example: "Atividade 1"
        descricao:
          type: string
          description: Descrição da atividade
          example: "Palestra de abertura do evento"
        data:
          type: string
          format: Date
          description: Data do evento
          example: "1999-12-30"
        horarioInicio:
          type: string
          format: Date/Time
          description: Horario de inicio do evento
          example: "1999-12-30 01:00:00"
        horarioFinal:
          type: string
          format: Date/Time
          description: Horario de termino do evento
          example: "1999-12-30 12:00:00"
        edicaoId:
          type: integer
          description: ID da edição associada
          example: 1
      required:
        - nome
        - tipoEnum
        - descricao
        - data
        - edicaoId
        - horarioInicio
        - horarioFinal

    Usuario:
      type: object
      properties:
        id:
          type: integer
          description: ID do usuário
          example: 1
        login:
          type: string
          description: login do usuário
          example: "login_do_usuario"
        nome:
          type: string
          description: Nome do usuário
          example: "Nome do Usuário"
        email:
          type: string
          description: Email do usuário
          example: "usuario@example.com"
        afiliacao:
          type: string
          description: Nome da afiliação
          example: "Nome do Afiliacao"
      required:
        - nome
        - login
        - afiliacao
        - email
